/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package FrontEnd;

import java.awt.*;
import javax.swing.*;
import connecthub.*;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author John
 */
public class NewsFeedWindow extends javax.swing.JFrame {

    private User user;
    private UsersDatabase usersDatabase = new UsersDatabase();
    private NewsFeed newsFeed = new NewsFeed(usersDatabase);
    private List<Content> posts;
    private List<Content> stories;
    private ContentDatabase contentDatabase = new ContentDatabase();

    /**
     * Creates new form ProfileWindow
     *
     * @param user
     */
    public NewsFeedWindow(User user) {
        this.user = user;

        initComponents();
        postsPanel.setLayout(new BoxLayout(postsPanel, BoxLayout.Y_AXIS));
        storiesPanel.setLayout(new FlowLayout(FlowLayout.LEFT, 10, 10));

        refresh();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        myProfileBtn = new javax.swing.JButton();
        storiesScrollPanel = new javax.swing.JScrollPane();
        storiesPanel = new javax.swing.JPanel();
        postsScrollPanel = new javax.swing.JScrollPane();
        postsPanel = new javax.swing.JPanel();
        createStoryBtn = new javax.swing.JButton();
        createPostBtn = new javax.swing.JButton();
        refreshBtn = new javax.swing.JButton();
        myFriendsBtn = new javax.swing.JButton();
        friendSuggestionsBtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        myProfileBtn.setText("My Profile");
        myProfileBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myProfileBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout storiesPanelLayout = new javax.swing.GroupLayout(storiesPanel);
        storiesPanel.setLayout(storiesPanelLayout);
        storiesPanelLayout.setHorizontalGroup(
            storiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 590, Short.MAX_VALUE)
        );
        storiesPanelLayout.setVerticalGroup(
            storiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 166, Short.MAX_VALUE)
        );

        storiesScrollPanel.setViewportView(storiesPanel);

        javax.swing.GroupLayout postsPanelLayout = new javax.swing.GroupLayout(postsPanel);
        postsPanel.setLayout(postsPanelLayout);
        postsPanelLayout.setHorizontalGroup(
            postsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 590, Short.MAX_VALUE)
        );
        postsPanelLayout.setVerticalGroup(
            postsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 371, Short.MAX_VALUE)
        );

        postsScrollPanel.setViewportView(postsPanel);

        createStoryBtn.setText("Create Story");
        createStoryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createStoryBtnActionPerformed(evt);
            }
        });

        createPostBtn.setText("Create Post");
        createPostBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createPostBtnActionPerformed(evt);
            }
        });

        refreshBtn.setText("Refresh");
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });

        myFriendsBtn.setText("My  Friends");
        myFriendsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myFriendsBtnActionPerformed(evt);
            }
        });

        friendSuggestionsBtn.setText("Friend Suggestion");
        friendSuggestionsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                friendSuggestionsBtnActionPerformed(evt);
            }
        });

        jButton1.setText("Add Friend");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Friend Requests");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(storiesScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 592, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(postsScrollPanel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(myProfileBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(refreshBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(myFriendsBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(friendSuggestionsBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(createStoryBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(createPostBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(refreshBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(myProfileBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(myFriendsBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(friendSuggestionsBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(createStoryBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(createPostBtn))
                    .addComponent(storiesScrollPanel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(postsScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 362, Short.MAX_VALUE)
                        .addGap(0, 10, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
//user creates story
    private void createStoryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createStoryBtnActionPerformed
        CreateContentWindow content = new CreateContentWindow(this, true, "s");
        content.pack();
        content.setVisible(true);

        String contentText = content.getContentText();
        String contentImgDir = content.getContentImgDir();

        if (!"".equals(contentText) || !"".equals(contentImgDir)) {
            Story story = new Story(contentText, contentImgDir);
            story.setMaximumSize(new Dimension(550, story.getPreferredSize().height));
            storiesPanel.add(story);
            storiesPanel.revalidate();
            storiesPanel.repaint();
            contentDatabase.createContent(user.getUserId(), contentText, contentImgDir, true);
        }
    }//GEN-LAST:event_createStoryBtnActionPerformed
// user creates post
    private void createPostBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createPostBtnActionPerformed
        CreateContentWindow content = new CreateContentWindow(this, true, "p");
        content.pack();
        content.setVisible(true);

        String contentText = content.getContentText();
        String contentImgDir = content.getContentImgDir();

        if (!"".equals(contentText) || !"".equals(contentImgDir)) {
//            Post post = new Post(contentText, contentImgDir);
            Post post = new Post(contentText, contentImgDir);
            post.setMaximumSize(new Dimension(550, post.getPreferredSize().height));
            postsPanel.add(post);
            postsPanel.revalidate();
            postsPanel.repaint();
            contentDatabase.createContent(user.getUserId(), contentText, contentImgDir, false);
        }
    }//GEN-LAST:event_createPostBtnActionPerformed

    //user views his profile
    private void myProfileBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myProfileBtnActionPerformed
        Profile profile = new Profile(user);
        profile.setVisible(true);
        dispose();
    }//GEN-LAST:event_myProfileBtnActionPerformed

    //user views his friends
    private void myFriendsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myFriendsBtnActionPerformed
        Friends friends = new Friends(user);
        friends.pack();
        friends.setVisible(true);
    }//GEN-LAST:event_myFriendsBtnActionPerformed

    //user views friends suggestions
    private void friendSuggestionsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_friendSuggestionsBtnActionPerformed
        FriendSuggestions friendSuggestions = new FriendSuggestions(user);
        friendSuggestions.pack();
        friendSuggestions.setVisible(true);
    }//GEN-LAST:event_friendSuggestionsBtnActionPerformed

    //refresh feed for latest posts
    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        refresh();
    }//GEN-LAST:event_refreshBtnActionPerformed

    //user searches for a specific friend to add
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        AddFriend window = new AddFriend(user);
        window.setVisible(true);
        window.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_jButton1ActionPerformed

    //user views his pending friend requests
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        FriendRequests N = new FriendRequests(user);
        N.setVisible(true);
        N.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_jButton2ActionPerformed

    //Refresh method
    private void refresh() {
        // adding posts of friends
        posts = newsFeed.getPostsOnly(user);
        System.out.println(posts.size());
        for (int i = 0; i < posts.size(); i++) {
            String contentText = posts.get(i).getContent();
            String contentImgDir = posts.get(i).getImg();
            if (!"".equals(contentText) || !"".equals(contentImgDir)) {
                Post post = new Post(contentText, contentImgDir);
                post.setMaximumSize(new Dimension(550, post.getPreferredSize().height));
                postsPanel.add(post);
                postsPanel.revalidate();
                postsPanel.repaint();
            }
        }

        // adding stories of friends
        stories = newsFeed.getStoriesOnly(user);
        for (int i = 0; i < stories.size(); i++) {
            String contentText = stories.get(i).getContent();
            String contentImgDir = stories.get(i).getImg();
            if (!"".equals(contentText) || !"".equals(contentImgDir)) {
                Story story = new Story(contentText, contentImgDir);
                story.setMaximumSize(new Dimension(550, story.getPreferredSize().height));
                storiesPanel.add(story);
                storiesPanel.revalidate();
                storiesPanel.repaint();
            }
        }
    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createPostBtn;
    private javax.swing.JButton createStoryBtn;
    private javax.swing.JButton friendSuggestionsBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton myFriendsBtn;
    private javax.swing.JButton myProfileBtn;
    private javax.swing.JPanel postsPanel;
    private javax.swing.JScrollPane postsScrollPanel;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JPanel storiesPanel;
    private javax.swing.JScrollPane storiesScrollPanel;
    // End of variables declaration//GEN-END:variables
}
